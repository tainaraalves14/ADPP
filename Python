Revisão de Python - Primeira Aula 

1- Escreva um programa que verifica se um número fornecido pelo usuário 
é perfeito. Um número é perfeito quando a soma de seus divisores (exceto 
ele mesmo) é igual ao próprio número. 


Exemplo Estrutura Base 

# 1. Importações (se necessário)
# Exemplo: importações de bibliotecas
import math
# 2. Definição de funções (se necessário)
def saudacao(nome):
    print(f"Olá, {nome}!")
# 3. Entrada de dados
nome_usuario = input("Digite seu nome: ")
# 4. Processamento
# Aqui acontece a lógica principal do algoritmo
mensagem = f"Bem-vindo, {nome_usuario}!"

# 5. Saída de dados
print(mensagem)
saudacao(nome_usuario)


1- Resposta
# Função que verifica se um número é perfeito
def eh_perfeito(numero):
    soma = 0
    for i in range(1, numero):
        if numero % i == 0:
            soma += i
    return soma == numero

# Entrada do usuário
num = int(input("Digite um número inteiro positivo: "))

# Verificação e saída
if num > 0:
    if eh_perfeito(num):
        print(f"{num} é um número perfeito!")
    else:
        print(f"{num} não é um número perfeito.")
else:
    print("Por favor, digite um número inteiro positivo.")


2- Peça ao usuário para inserir um texto e conte quantas vezes cada palavra 
aparece nele. Exiba os resultados em um dicionário.

# Entrada do usuário
texto = input("Digite um texto: ")

# Tratamento do texto (opcional: tudo minúsculo)
texto = texto.lower()

# Quebra o texto em palavras (separadas por espaços)
palavras = texto.split()

# Criação do dicionário para contar as palavras
contagem = {}

# Contagem das ocorrências
for palavra in palavras:
    if palavra in contagem:
        contagem[palavra] += 1
    else:
        contagem[palavra] = 1

# Exibição do resultado
print("Contagem de palavras:")
print(contagem)


3- Escreva uma função que receba dois números inteiros e retorne uma lista 
contendo todos os números primos entre eles.

# Função que verifica se um número é primo
def eh_primo(n):
    if n <= 1:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

# Função que encontra os números primos entre dois números
def primos_entre(a, b):
    primos = []
    for num in range(a, b + 1):
        if eh_primo(num):
            primos.append(num)
    return primos

# Entrada do usuário
inicio = int(input("Digite o primeiro número: "))
fim = int(input("Digite o segundo número: "))

# Chama a função e exibe os resultados
lista_primos = primos_entre(inicio, fim)
print(f"Os números primos entre {inicio} e {fim} são: {lista_primos}")


4- Implemente uma função recursiva para calcular o fatorial de um número 
fornecido pelo usuário.

def 

5- Crie um programa que lê um arquivo .txt e conta quantas linhas, palavras e 
caracteres ele contém.
6- Escreva uma função que verifica se uma string fornecida pelo usuário é 
um palíndromo (lê-se igual de frente para trás e de trás para frente). 
7- Implemente uma função que recebe um número N e retorna uma lista com 
os N primeiros termos da sequência de Fibonacci.
8- Crie um programa que recebe uma lista de nomes e sorteia um nome 
aleatoriamente. 
9- Implemente um sistema simples de CRUD usando um dicionário, onde o 
usuário pode adicionar, remover, atualizar e listar contatos (nome e 
telefone). 
10-  Utilizando o exercício 9, altere o armazenamento para um arquivo local. 

